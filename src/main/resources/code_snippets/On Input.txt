try{
resultCode ="OK";
resultMessage = "No errors encountered.";
nrFilesCreated = nrFiles;
partNrRows++;
//logInfo("Call synchrozie-lock");
synchronized(lock)
		{
			nrRows++;
		}
//logInfo("Before partNrRows==1");
if (partNrRows == 1) {
	requestedLogLevel = logLevel;
	xsd=xsdFile; logInfo("xsd has been set to >" + xsd +"<.");
	xsdPath=xsdDirectory; logInfo("xsdPath has been set to >" + xsdPath +"<.");
	xmlFile = targetFileName;
	oneFilePerRow = oneFilePerInputRow;
	pathXml = Paths.get(xmlFile);
   
    xml =new GenerateXml();
	log(DEBUG, "setting xsdfile to >" + xsd +"<.");
	xml.setXsdFile(xsd);
	xml.setXsdPath(xsdPath); 
	log(DEBUG, "setting xml file to >" + xmlFile +"<.");
    xml.setTarget(xmlFile);
    log(DEBUG, "setting one file per row to >" + oneFilePerRow +"<.");
	xml.setOneFilePerRow(oneFilePerRow);
	xml.initXmlFile();
	if(!"OK".equals(xml.getResultCode())) { 
		failSession(xml.getResultMessage());
	}
}

log(DEBUG, "new arraylist for values");
values = new ArrayList<String>(); 
if(Value1 != null) values.add(Value1);  
if(Value2 != null) values.add(Value2);  
if(Value3 != null) values.add(Value3);  
if(Value4 != null) values.add(Value4);  
if(Value5 != null) values.add(Value5);  
if(Value6 != null) values.add(Value6);  
if(Value7 != null) values.add(Value7);  
if(Value8 != null) values.add(Value8);  
if(Value9 != null) values.add(Value9);  
if(Value10 != null) values.add(Value10);  
if(Value11 != null) values.add(Value11);  
if(Value12 != null) values.add(Value12);  
if(Value13 != null) values.add(Value13);  
if(Value14 != null) values.add(Value14);  
if(Value15 != null) values.add(Value15);  
if(Value16 != null) values.add(Value16);  
if(Value17 != null) values.add(Value17);  
if(Value18 != null) values.add(Value18);  
if(Value19 != null) values.add(Value19);  
if(Value20 != null) values.add(Value20);  
if(Value21 != null) values.add(Value21);  
if(Value22 != null) values.add(Value22);  
if(Value23 != null) values.add(Value23);  
if(Value24 != null) values.add(Value24);  
if(Value25 != null) values.add(Value25);  
if(Value26 != null) values.add(Value26);  
if(Value27 != null) values.add(Value27);  
if(Value28 != null) values.add(Value28);  
if(Value29 != null) values.add(Value29);  
if(Value30 != null) values.add(Value30);
if(Value31 != null) values.add(Value31);
if(Value32 != null) values.add(Value32);
if(Value33 != null) values.add(Value33);
if(Value34 != null) values.add(Value34);
if(Value35 != null) values.add(Value35);
if(Value36 != null) values.add(Value36);
if(Value37 != null) values.add(Value37);
if(Value38 != null) values.add(Value38);
if(Value39 != null) values.add(Value39);
if(Value40 != null) values.add(Value40);
if(Value41 != null) values.add(Value41);
if(Value42 != null) values.add(Value42);
if(Value43 != null) values.add(Value43);
if(Value44 != null) values.add(Value44);
if(Value45 != null) values.add(Value45);
if(Value46 != null) values.add(Value46);
if(Value47 != null) values.add(Value47);
if(Value48 != null) values.add(Value48);
if(Value49 != null) values.add(Value49);
if(Value50 != null) values.add(Value50);
if(Value51 != null) values.add(Value51);
if(Value52 != null) values.add(Value52);
if(Value53 != null) values.add(Value53);
if(Value54 != null) values.add(Value54);
if(Value55 != null) values.add(Value55);
if(Value56 != null) values.add(Value56);
if(Value57 != null) values.add(Value57);
if(Value58 != null) values.add(Value58);
if(Value59 != null) values.add(Value59);
if(Value60 != null) values.add(Value60);
if(Value61 != null) values.add(Value61);
if(Value62 != null) values.add(Value62);
if(Value63 != null) values.add(Value63);
if(Value64 != null) values.add(Value64);
if(Value65 != null) values.add(Value65);
if(Value66 != null) values.add(Value66);
if(Value67 != null) values.add(Value67);
if(Value68 != null) values.add(Value68);
if(Value69 != null) values.add(Value69);
if(Value70 != null) values.add(Value70);

log(DEBUG,"Received >" + values.size() +"< value(s).");

	if ("Y".equals(oneFilePerRow)) {
            xml.generateOneXmlFilePerRow(data); 
	} else {
            xml.writeDataElements(values);
	}

} catch(Exception e) {
	logError(e.toString());
	failSession(e.getMessage());
}
