try{
resultCode ="OK";
resultMessage = "No errors encountered.";
nrFilesCreated = nrFiles;

partNrRows++;
//logInfo("Call synchrozie-lock");
synchronized(lock)
		{
			nrRows++;
		}
//logInfo("Before partNrRows==1");
if (partNrRows == 1) {
	requestedLogLevel = logLevel;
	xsd=xsdFile; logInfo("xsd has been set to >" + xsd +"<.");
	xsdPath=xsdDirectory; logInfo("xsdPath has been set to >" + xsdPath +"<.");
	xmlFile = targetFileName;
	oneFilePerRow = oneFilePerInputRow;
	pathXml = Paths.get(xmlFile);
	suppressTags = suppressEmptyTags;
   
    xml =new GenerateXml();
	logInfo("setting xsdfile to >" + xsd +"<.");
	xml.setXsdFile(xsd);
	xml.setXsdPath(xsdPath); 
	logInfo("setting xml file to >" + xmlFile +"<.");
    xml.setTarget(xmlFile);
    logInfo("setting one file per row to >" + oneFilePerRow +"<.");
	xml.setOneFilePerRow(oneFilePerRow);
	if(suppressEmptyTags != null) {
	    logInfo("setting suppressEmptyTags to >" + suppressTags +"<.");
		xml.setSuppressEmptyTags(suppressTags);
	}
	xml.initXmlFile();
	if(!"OK".equals(xml.getResultCode())) { 
		failSession(xml.getResultMessage());
	}
}

log(DEBUG, "new arraylist for values");
values = new ArrayList<String>(); 
values.add(Value1);  
values.add(Value2);  
values.add(Value3);  
values.add(Value4);  
values.add(Value5);  
values.add(Value6);  
values.add(Value7);  
values.add(Value8);  
values.add(Value9);  
values.add(Value10);  
values.add(Value11);  
values.add(Value12);  
values.add(Value13);  
values.add(Value14);  
values.add(Value15);  
values.add(Value16);  
values.add(Value17);  
values.add(Value18);  
values.add(Value19);  
values.add(Value20);  
values.add(Value21);  
values.add(Value22);  
values.add(Value23);  
values.add(Value24);  
values.add(Value25);  
values.add(Value26);  
values.add(Value27);  
values.add(Value28);  
values.add(Value29);  
values.add(Value30);
values.add(Value31);
values.add(Value32);
values.add(Value33);
values.add(Value34);
values.add(Value35);
values.add(Value36);
values.add(Value37);
values.add(Value38);
values.add(Value39);
values.add(Value40);
values.add(Value41);
values.add(Value42);
values.add(Value43);
values.add(Value44);
values.add(Value45);
values.add(Value46);
values.add(Value47);
values.add(Value48);
values.add(Value49);
values.add(Value50);
values.add(Value51);
values.add(Value52);
values.add(Value53);
values.add(Value54);
values.add(Value55);
values.add(Value56);
values.add(Value57);
values.add(Value58);
values.add(Value59);
values.add(Value60);
values.add(Value61);
values.add(Value62);
values.add(Value63);
values.add(Value64);
values.add(Value65);
values.add(Value66);
values.add(Value67);
values.add(Value68);
values.add(Value69);
values.add(Value70);

	if ("Y".equals(oneFilePerRow)) {
            xml.generateOneXmlFilePerRow(data); 
	} else {
            xml.writeDataElements(values);
	}

} catch(Exception e) {
	logError(e.toString());
	failSession(e.getMessage());
}
